version: "3.9"

# ðŸ”¹ Main group metadata
name: "Employee Management System"
description: "Employee Management System with frontend, backend, and database."
techstacks:
  - name: Node.js
    iconUrl: "https://cdn.simpleicons.org/nodedotjs"
  - name: PostgreSQL
    iconUrl: "https://cdn.simpleicons.org/postgresql"
iconUrl: "https://ui-avatars.com/api/?name=Employee+Management+System"
sharedVariable:
  ENVIRONMENT: "production"
  TIMEZONE: "UTC"

services:
  employee-info-app:
    type: application
    order: 1
    serviceUrl: "https://github.com/sursatech/employee-info-app.git"
    iconUrl: "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg"
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=${domainUrl::employee-info-api}
      - __VITE_ADDITIONAL_SERVER_ALLOWED_HOSTS=.sursakit.app
    buildConfig:
      packages:
        - "node@22"
      installCommand: "npm install"
      startCommand: "npm run dev -- --host"
      ports:
        - 3000

  employee-info-api:
    type: application
    order: 2
    serviceUrl: "https://github.com/sursatech/employee-info-api.git"
    iconUrl: ""
    environment:
      - DATABASE_URL=postgresql://${env::production-db::POSTGRES_USER}:${env::production-db::POSTGRES_PASSWORD}@${host::production-db}/${env::production-db::POSTGRES_DB}
    buildConfig:
      packages:
        - "node@22"
      installCommand: "npm install && npm run prisma:generate && npm run prisma:migrate -- --name \"initial_setup\""
      startCommand: "npm run dev"
      ports:
        - 3000

  production-db:
    type: database
    order: 3
    iconUrl: "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/postgresql/postgresql-original.svg"
    image: ghcr.io/railwayapp-templates/postgres-ssl:16
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - DB_HOST=${host::production-db}
      - DB_TYPE=postgres
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=employee_info
[
 
  {
    "id": "react-vite-typescript-starter",
    "type":"application",

    "name": "React + Vite + TypeScript (Minimal)",
    "description": "Minimal React starter with Vite and TypeScript",
    "githubUrl": "https://github.com/sursakit-template/react-vite-typescript-starter.git",
    "language": "typescript",
    "framework": "react",
    "tags": ["react", "vite", "typescript", "spa", "minimal", "frontend"],
    "difficulty": "beginner",
    "author": "Sursakit",
    "features": ["TypeScript", "Vite", "Hot Reload", "ESLint", "Prettier"],
    "useCases": ["spa", "dashboard", "admin-panel", "web-app"],
    "defaultPorts": [5173],
    "requirements": ["Node.js 18+", "npm or bun"],
    "buildConfig": {
      "installCommand": "npm install",
      "startCommand": "npm run dev -- --host 0.0.0.0",
      "packages": ["node@22"],
      "ports": [5173]
    },
    "environment": [
      "VITE_API_URL=${domainUrl::api-backend}",
      "__VITE_ADDITIONAL_SERVER_ALLOWED_HOSTS=.sursakit.app"
    ]
  },
  {
    "id": "react-vite-typescript-shadcn-starter",
    "type":"application",

    "name": "React + Vite + TypeScript + Shadcn UI",
    "description": "Modern React starter with Vite, TypeScript, and Shadcn UI components",
    "githubUrl": "https://github.com/sursakit-template/react-vite-typescript-shadcn-starter.git",
    "language": "typescript",
    "framework": "react",
    "tags": ["react", "vite", "typescript", "shadcn", "ui", "tailwind"],
    "difficulty": "beginner",
    "author": "Sursakit",
    "features": ["TypeScript", "Vite", "Shadcn UI", "Tailwind CSS", "Dark Mode"],
    "useCases": ["spa", "dashboard", "admin-panel", "saas"],
    "defaultPorts": [5173],
    "requirements": ["Node.js 18+"],
    "buildConfig": {
      "installCommand": "npm install",
      "startCommand": "npm run dev -- --host 0.0.0.0",
      "packages": ["node@22"],
      "ports": [5173]
    },
    "environment": [
      "VITE_API_URL=${domainUrl::api-backend}",
      "__VITE_ADDITIONAL_SERVER_ALLOWED_HOSTS=.sursakit.app"
    ]
  },
  {
    "id": "angular-typescript-starter",
    "type":"application",

    "name": "Angular + TypeScript (Minimal)",
    "description": "Clean Angular starter with TypeScript",
    "githubUrl": "https://github.com/sursakit-template/angular-typescript-starter.git",
    "language": "typescript",
    "framework": "angular",
    "tags": ["angular", "typescript", "spa", "minimal", "frontend"],
    "difficulty": "intermediate",
    "author": "Sursakit",
    "features": ["TypeScript", "Angular CLI", "RxJS", "Routing"],
    "useCases": ["spa", "enterprise-app", "dashboard"],
    "defaultPorts": [4200],
    "requirements": ["Node.js 18+", "Angular CLI"],
    "buildConfig": {
      "installCommand": "npm install",
      "startCommand": "npm start -- --host 0.0.0.0 --port 4200",
      "packages": ["node@22"],
      "ports": [4200]
    },
    "environment": [
      "NG_API_URL=${domainUrl::api-backend}"
    ]
  },
  {
    "id": "angular-typescript-material-starter",
    "type":"application",

    "name": "Angular + TypeScript + Material Design",
    "description": "Angular starter with Material Design components",
    "githubUrl": "https://github.com/sursakit-template/angular-typescript-material-starter.git",
    "language": "typescript",
    "framework": "angular",
    "tags": ["angular", "typescript", "material", "ui", "spa", "frontend"],
    "difficulty": "intermediate",
    "author": "Sursakit",
    "features": ["TypeScript", "Angular Material", "Responsive Design", "Theming"],
    "useCases": ["spa", "enterprise-app", "dashboard", "admin-panel"],
    "defaultPorts": [4200],
    "requirements": ["Node.js 18+", "Angular CLI"],
    "buildConfig": {
      "installCommand": "npm install",
      "startCommand": "npm start -- --host 0.0.0.0 --port 4200",
      "packages": ["node@22"],
      "ports": [4200]
    },
    "environment": [
      "NG_API_URL=${domainUrl::api-backend}"
    ]
  },
  {
    "id": "node-express-typescript-starter",
    "type":"application",
    "name": "Node.js + Express + TypeScript",
    "description": "Express TypeScript server for REST APIs",
    "githubUrl": "https://github.com/sursatech/employee-info-api.git",
    "language": "typescript",
    "framework": "express",
    "tags": ["nodejs", "express", "typescript", "api", "rest", "backend"],
    "difficulty": "beginner",
    "author": "Community",
    "features": ["TypeScript", "Express.js", "REST API", "Middleware Support"],
    "useCases": ["api", "backend", "rest-api", "microservice"],
    "defaultPorts": [3000],
    "requirements": ["Node.js 18+"],
    "buildConfig": {
      "installCommand": "npm install && npm run prisma:generate && npm run prisma:migrate -- --name \"initial_setup\"",
      "startCommand": "npm run dev",
      "packages": ["node@22"],
      "ports": [3000]
    },
    "environment": [
      "NODE_ENV=development",
      "PORT=3000",
      "DATABASE_URL=postgresql://${env::postgres-db::POSTGRES_USER}:${env::postgres-db::POSTGRES_PASSWORD}@${host::postgres-db}/${env::postgres-db::POSTGRES_DB}"
    ]
  },
  {
    "id": "csharp-postgres-rest-api",
    "type":"application",
    "name": ".NET 8 + C# + PostgreSQL REST API",
    "description": "Modern .NET 8 API with Entity Framework and PostgreSQL",
    "githubUrl": "https://github.com/sursakit-template/csharp-postgres-rest-api.git",
    "language": "csharp",
    "framework": "dotnet",
    "tags": ["dotnet", "csharp", "postgresql", "api", "entity-framework", "backend"],
    "difficulty": "intermediate",
    "author": "Sursakit",
    "features": [".NET 8", "Entity Framework Core", "PostgreSQL", "RESTful API", "Swagger"],
    "useCases": ["api", "backend", "enterprise", "crud"],
    "defaultPorts": [5000],
    "requirements": [".NET 8 SDK", "PostgreSQL"],
    "buildConfig": {
      "installCommand": "dotnet restore && dotnet tool restore",
      "startCommand": "dotnet run --project WebAPI --urls \"http://0.0.0.0:5000\"",
      "packages": ["dotnet@8.0"],
      "ports": [5000]
    },
    "environment": [
      "ASPNETCORE_ENVIRONMENT=Development",
      "ASPNETCORE_URLS=http://0.0.0.0:5000",
      "ConnectionStrings__DefaultConnection=postgresql://${env::postgres-db::POSTGRES_USER}:${env::postgres-db::POSTGRES_PASSWORD}@${host::postgres-db}/${env::postgres-db::POSTGRES_DB}"
    ]
  },
  {
    "id": "python-fastapi-postgres",
    "type": "application",
    "name": "Python + FastAPI + PostgreSQL",
    "description": "FastAPI REST API with PostgreSQL and SQLAlchemy ORM",
    "githubUrl": "https://github.com/sursakit-template/python-fastapi-postgres",
    "language": "python",
    "framework": "fastapi",
    "tags": ["python", "fastapi", "postgresql", "api", "sqlalchemy", "backend"],
    "difficulty": "intermediate",
    "author": "Sursakit",
    "features": ["FastAPI", "PostgreSQL", "SQLAlchemy", "Pydantic", "REST API", "Swagger"],
    "useCases": ["api", "backend", "rest-api", "crud", "microservice"],
    "defaultPorts": [8000],
    "requirements": ["Python 3.9+", "PostgreSQL"],
    "buildConfig": {
      "installCommand": "python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt",
      "startCommand": "source venv/bin/activate && uvicorn app.main:app --reload --host 0.0.0.0 --port 8000",
      "packages": ["python@3.14"],
      "aptPackages": ["build-essential", "g++", "gcc", "libc6-dev", "libpq-dev", "python3-dev", "libpq5"],
      "ports": [8000]
    },
    "environment": [
      "DATABASE_URL=postgresql://${env::postgres-db::POSTGRES_USER}:${env::postgres-db::POSTGRES_PASSWORD}@${host::postgres-db}/${env::postgres-db::POSTGRES_DB}"
    ]
  },
  {
  "id": "postgres-db",
  "type":"database",
  "name": "PostgreSQL 16",
  "description": "Production-grade PostgreSQL 16 database with SSL enabled and persistent volume storage.",
  "image": "ghcr.io/railwayapp-templates/postgres-ssl:16",
  "language": "sql",
  "tags": ["database", "postgres", "sql", "ssl"],
  "difficulty": "intermediate",
  "author": "Railway Template",
  "features": [
    "PostgreSQL 16",
    "SSL Support",
    "Persistent Volume",
    "UTF-8 Encoding",
    "Custom Collation"
  ],
  "useCases": [
    "web-app-backend",
    "data-storage",
    "api-database",
    "production-environment"
  ],
  "defaultPorts": [5432],
  "requirements": ["Docker", "Railway CLI"],
  "buildConfig": {
    "ports": [5432],
    "volumes": ["db-data:/var/lib/postgresql/data"]
  },
  "environment": {
    "DB_TYPE": "postgres",
    "DB_HOST": "${host::postgres-db}",
    "POSTGRES_USER": "user",
    "POSTGRES_PASSWORD": "password",
    "POSTGRES_DB": "${variable::database-name}"
  },
  "iconUrl": "https://cdn.jsdelivr.net/gh/devicons/devicon/icons/postgresql/postgresql-original.svg"
}

]
